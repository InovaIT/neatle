// ./gradlew clean build generateRelease
apply plugin: 'maven'

def groupId = "si.inova"
def version = ext.getVersionName()

def localReleaseDest = "${buildDir}/release/${version}"

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
    classpath += configurations.javadocDeps
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = groupId
        pom.artifactId = project.artifactId
        pom.version = version
        // Add other pom properties here if you want (developer details / licenses)
        repository(url: "file://${localReleaseDest}")
    }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "release-${version}.zip"
    println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
}

task updateBintrayConfig << {
    ant.replace(file: "bintray.json", token: "#VERSION_NAME", value: version)
}

task generateRelease << {
    println "Release ${version} can be found at ${localReleaseDest}/"
}

generateRelease.dependsOn(uploadArchives)

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}